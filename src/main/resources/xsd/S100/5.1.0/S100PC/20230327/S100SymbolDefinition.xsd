<?xml version="1.0" encoding="UTF-8"?>
<!-- Â© Copyright 2011-2018, 2019, 2022-2023 International Hydrographic Organisation
License
Certain parts of this document may refer to or be based on the standards, documents, schemas,
or other material of the International Organization for Standardization (ISO), Open Geospatial
Consortium (OGC), International Hydrographic Organization / Organisation Hydrographique
Internationale (IHO/OHI).
The ISO material can be obtained from any ISO member and from the Web site of the ISO Central
Secretariat at www.iso.org.
The OGC material can be obtained from the OGC Web site at www.opengeospatial.org.
The IHO material can be obtained from the IHO Web site at www.iho.int or from the International
Hydrographic Organization Secretariat.

Permission to copy and distribute this document is hereby granted provided that this notice is
retained on all copies, and that the IHO is credited when the material is redistributed
or used in part or whole in derivative works.
Redistributions in binary form must reproduce this notice in the documentation and/or other
materials provided with the distribution.

Disclaimer
This work is provided by the copyright holders and contributors "as is" and any express or implied
warranties, including, but not limited to, the implied warranties of merchantability and fitness
for a particular purpose are disclaimed. In no event shall the copyright owner or contributors be
liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including,
but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or
business interruption) however caused and on any theory of liability, whether in contract, strict
liability, or tort (including negligence or otherwise) arising in any way out of the use of this
software, even if advised of the possibility of such damage.
-->
<!-- S-100 5.0.0 Build 20220331 Coverage placement added; Namespace updated;
		CSL schema relocated
		20220705: Updated to add version attribute and change location of S100CSL import to relative from
			absolute location, at OEM request
	Version 5.1.0 Build 20230327 LineSymbolPlacement.visibleParts added; definitions added
-->
<xs:schema xmlns="http://www.iho.int/S100SymbolDefinition/5.1"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:s100CSL="http://www.iho.int/s100/csl/5.0"
	targetNamespace="http://www.iho.int/S100SymbolDefinition/5.1"
	version="5.1.0-20230327">
	<xs:import namespace="http://www.iho.int/s100/csl/5.0" schemaLocation="../../../5.0.0/S100CSL/20220331/S100CSL.xsd"/>

	<!-- THE GRAPHICS BASE PACKAGE -->
	<!-- A string with at least 1 character starting with an alpha numerical character used as identifier within this catalogue -->
	<xs:simpleType name="IdString">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:pattern value="[0-9a-zA-Z]*"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- A color token (either a string starting with an alpha character followed by alpha numeric characters or a hash and thre hex numbers like #AA44A8) -->
	<xs:simpleType name="ColorToken">
		<xs:annotation><xs:documentation>The token specifies either an element in a colour
			table or a colour definition in the RGB space</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:pattern value="[a-zA-Z][0-9a-zA-Z]*|#[0-9A-Fa-f]{6}"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration CRSType  -->
	<xs:simpleType name="Interval01">
		<xs:restriction base="xs:double">
			<xs:minInclusive value="0.0"/>
			<xs:maxInclusive value="1.0"/>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration CRSType -->
	<xs:simpleType name="CRSType">
		<xs:annotation>
			<xs:documentation>The value describes the type of a CRS. This includes the axes definitions, base line for
			angle measurement and units for distances</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="GeographicCRS">
				<xs:annotation>
					<xs:documentation>A geographic CRS with axis latitude and longitude measured in degrees. Angles are
				defined clockwise from the true north direction. Distances will be measured in metres</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PortrayalCRS">
				<xs:annotation>
					<xs:documentation>A Cartesian coordinate system with the y-axis pointing upwards. Units on the axes and
				for distances are millimetres. Angles are measured in degrees clockwise from the
				positive y-axis.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LocalCRS">
				<xs:annotation>
					<xs:documentation>A Cartesian coordinate system originated at a local geometry. Units on the axes and
				for distances are millimetres. Angles are measured in degrees clockwise from the
				positive y-axis.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LineCRS">
				<xs:annotation>
					<xs:documentation>A none-Cartesian coordinate system where the x-axis is following the geometry of a
				curve and the y-axis is perpendicular to the x-axis (positive to the left of the x-axis).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!--  Class Point -->
	<xs:complexType name="Point">
		<xs:annotation><xs:documentation>A zero-dimensional geometric object in a twodimensional
			coordinate space. The coordinate will
			refer to a coordinate reference system</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="x" type="xs:double"><xs:annotation><xs:documentation>The x-coordinate of the point. In case the CRS is a
				geographic CRS this refers to the longitude</xs:documentation></xs:annotation></xs:element>
			<xs:element name="y" type="xs:double"><xs:annotation><xs:documentation>The y-coordinate of the point. In case the CRS is a
				geographic CRS this refers to the latitude</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--  Class Vector -->
	<xs:complexType name="Vector">
		<xs:annotation><xs:documentation>A geometric object that has both a magnitude and
			a direction. It is limited to Cartesian coordinate
			reference systems</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="x" type="xs:double"><xs:annotation><xs:documentation>The x-coordinate of the vector</xs:documentation></xs:annotation></xs:element>
			<xs:element name="y" type="xs:double"><xs:annotation><xs:documentation>The y-coordinate of the vector</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!--  Class Sector -->
	<xs:complexType name="Sector">
		<xs:annotation><xs:documentation>Region of the Cartesian plane enclosed by two radii</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="rotationCRS" type="CRSType" minOccurs="0"><xs:annotation><xs:documentation>If present, specifies the CRS for startAngle</xs:documentation></xs:annotation></xs:element>
			<xs:element name="startAngle" type="xs:double"><xs:annotation><xs:documentation>The direction of the radius that defines the
				beginning of the sector</xs:documentation></xs:annotation></xs:element>
			<xs:element name="angularDistance" type="xs:double"><xs:annotation><xs:documentation>The angular distance of the sector measured in
				degrees. Positive values means clockwise,
				negative values means anti-clockwise</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Class Color -->
	<xs:complexType name="Color">
		<xs:annotation><xs:documentation>Representing a colour according to the colour model</xs:documentation></xs:annotation>
		<xs:simpleContent>
			<xs:extension base="ColorToken">
				<xs:attribute name="transparency" type="Interval01" default="0.0"><xs:annotation><xs:documentation>The value specifies the transparency; between 0
					(opaque) and 1 (full transparent)</xs:documentation></xs:annotation></xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- Class OverrideColor -->
	<xs:complexType name="OverrideColor">
		<xs:annotation><xs:documentation>Association class for the replacement of an existing colour in the pixmap with another colour</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="override" type="Color"><xs:annotation><xs:documentation>The overridden color?</xs:documentation></xs:annotation></xs:element>
			<xs:element name="color" type="Color"><xs:annotation><xs:documentation>The colour that is used to replace the existing colour in the pixmap</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Class Pen -->
	<xs:complexType name="Pen">
		<xs:annotation><xs:documentation>A tool for drawing lines</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="color" type="Color"><xs:annotation><xs:documentation>The colour of the pen comprises the actual colour and the transparency</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="width" type="xs:double" use="required"><xs:annotation><xs:documentation>The width of the pen in mm</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
	<!-- Class Pixmap -->
	<xs:complexType name="Pixmap">
		<xs:annotation><xs:documentation>A two dimensional array of pixels defining an image</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="overrideAll" type="Color" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>A colour that override all none fully transparent
				colours used within the pixmap</xs:documentation></xs:annotation></xs:element>
			<xs:element name="override" type="OverrideColor" minOccurs="0" maxOccurs="unbounded"><xs:annotation><xs:documentation>A colour to be replaced by another colour</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="reference" type="IdString" use="required"><xs:annotation><xs:documentation>A reference to an external definition of the pixmap.
			This string is a unique identifier within the pixmap
			section of the Portrayal Catalogue</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
	<!-- Class Polyline -->
	<xs:complexType name="Polyline">
		<xs:annotation><xs:documentation>A segment defining its geometry by a series of points</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="point" type="Point" minOccurs="2" maxOccurs="unbounded"><xs:annotation><xs:documentation>The segments that build up the path</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Class Arc3Points -->
	<xs:complexType name="Arc3Points">
		<xs:annotation><xs:documentation>A segment describing an arc of a circle that is
			defined by 3 points. The points must not be colinear</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="startPoint" type="Point"><xs:annotation><xs:documentation>The point where the arc starts</xs:documentation></xs:annotation></xs:element>
			<xs:element name="medianPoint" type="Point"><xs:annotation><xs:documentation>An arbitrary point on the arc</xs:documentation></xs:annotation></xs:element>
			<xs:element name="endPoint" type="Point"><xs:annotation><xs:documentation>The point where the arc ends</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Class ArcByRadius -->
	<xs:complexType name="ArcByRadius">
		<xs:annotation><xs:documentation>A segment describing an arc of a circle that is defined by the centre of the arc and a radius. Optionally the arc can be restricted by a sector</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="center" type="Point"><xs:annotation><xs:documentation>The centre of the arc</xs:documentation></xs:annotation></xs:element>
			<xs:element name="sector" type="Sector" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>The sector defining where the arc starts and end. If
				not present the arc is a full circle</xs:documentation></xs:annotation></xs:element>
			<xs:element name="radius" type="xs:double"><xs:annotation><xs:documentation>The radius of the circle</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Class Annulus -->
	<xs:complexType name="Annulus">
		<xs:annotation><xs:documentation>A ring-shaped region bounded by two concentric circles. Optionally it can be enclosed by two radii of the circle</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="center" type="Point"><xs:annotation><xs:documentation>The centre of the arc</xs:documentation></xs:annotation></xs:element>
			<xs:element name="innerRadius" type="xs:double" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>The radius of the smaller circle. If not present the
				segment describes a sector of a circle</xs:documentation></xs:annotation></xs:element>
			<xs:element name="outerRadius" type="xs:double"><xs:annotation><xs:documentation>The radius of the larger circle</xs:documentation></xs:annotation></xs:element>
			<xs:element name="sector" type="Sector" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>The sector of an annulus segment</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- group for segments -->
	<xs:group name="Segment">
		<xs:annotation><xs:documentation></xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element name="polyline" type="Polyline"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="arc3Points" type="Arc3Points"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="arcByRadius" type="ArcByRadius"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="annulus" type="Annulus"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
		</xs:choice>
	</xs:group>
	<!-- Class Path -->
	<xs:complexType name="Path">
		<xs:annotation><xs:documentation>The definition of linear geometry by a composition of segments</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:group ref="Segment" minOccurs="1" maxOccurs="unbounded"><xs:annotation><xs:documentation>The segments that build up the path</xs:documentation></xs:annotation></xs:group>
		</xs:sequence>
	</xs:complexType>
	<!-- THE SYMBOL PACKAGE -->
	<!-- Enumeration LinePlacementMode -->
	<xs:simpleType name="LinePlacementMode">
		<xs:annotation><xs:documentation>Defines the type of placement of a symbol along a line</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Relative"><xs:annotation><xs:documentation>The offset has to be interpreted as homogenous coordinates, 0 for the start and 1 for the end of the curve</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Absolute"><xs:annotation><xs:documentation>The offset is the distance from the start of the curve</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration AreaPlacementMode -->
	<xs:simpleType name="AreaPlacementMode">
		<xs:annotation><xs:documentation>Defines the type of placement of a symbol within an area</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="VisibleParts"><xs:annotation><xs:documentation>The symbol has to be placed at a representative position in each visible part of the surface</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Geographic"><xs:annotation><xs:documentation>The symbol has to be placed at a representative position of the geographic object</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Class LineSymbolPlacement -->
	<xs:complexType name="LineSymbolPlacement">
		<xs:annotation><xs:documentation>Defines the placement of a symbol along a line</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="offset" type="xs:double"><xs:annotation><xs:documentation>The offset from the start of the curve</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="placementMode" type="LinePlacementMode" use="required"><xs:annotation><xs:documentation>The mode that defines how the offset is to be interpreted</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="visibleParts" type="xs:boolean" default="false" use="optional"><xs:annotation><xs:documentation>When true, indicates the placement applies to each visible part of the curve</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
	<!-- Class AreaSymbolPlacement -->
	<xs:complexType name="AreaSymbolPlacement">
		<xs:annotation><xs:documentation>Defines the placement of a symbol within an area</xs:documentation></xs:annotation>
		<xs:attribute name="placementMode" type="AreaPlacementMode" default="VisibleParts"><xs:annotation><xs:documentation>The mode that defines how the symbol has to be placed.</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
	<!-- Class Symbol -->
	<xs:complexType name="Symbol">
		<xs:annotation><xs:documentation>A two dimensional graphical element</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="offset" type="Vector" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>The shift of the symbols position from the
				position of the geometry. The default value is the vector with length equals to 0</xs:documentation></xs:annotation></xs:element>
			<xs:element name="overrideAll" type="Color" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>A colour that override all none fully transparent
				colours used within the symbol</xs:documentation></xs:annotation></xs:element>
			<xs:element name="override" type="OverrideColor" minOccurs="0" maxOccurs="unbounded"><xs:annotation><xs:documentation>A colour to be replaced by another colour</xs:documentation></xs:annotation></xs:element>
			<xs:element name="linePlacement" type="LineSymbolPlacement" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Information where on a line the symbol should be
				placed</xs:documentation></xs:annotation></xs:element>
			<xs:element name="areaPlacement" type="AreaSymbolPlacement" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Defines the placement of a symbol within an area</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="reference" type="IdString" use="required"><xs:annotation><xs:documentation>A reference to an external definition of the
			symbol graphic. This is an unique identifier in the
			symbol section of the Portrayal Catalogue</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="rotation" type="xs:double" default="0.0"><xs:annotation><xs:documentation>The rotation angle of the symbol. The default value is 0</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="rotationCRS" type="CRSType" default="PortrayalCRS"><xs:annotation><xs:documentation>Specifies the coordinate reference system for the rotation</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="scaleFactor" type="xs:double" default="1.0"><xs:annotation><xs:documentation>The factor by which the original symbol graphic is scaled. The default value is 1</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
	<!-- THE LINE STYLES PACKAGE -->
	<!-- Enumeration JoinStyle -->
	<xs:simpleType name="JoinStyle">
		<xs:annotation><xs:documentation>The decoration that is applied where two line segments meet</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Bevel"><xs:annotation><xs:documentation>Bevel</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Miter"><xs:annotation><xs:documentation>Miter</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Round"><xs:annotation><xs:documentation>Round</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration JoinStyle -->
	<xs:simpleType name="CapStyle">
		<xs:annotation><xs:documentation>The decoration that is applied where a line segment ends.</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Butt"><xs:annotation><xs:documentation>Butt</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Square"><xs:annotation><xs:documentation>Square</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Round"><xs:annotation><xs:documentation>Round</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Class Dash -->
	<xs:complexType name="Dash">
		<xs:annotation><xs:documentation>A single dash in a repeating line pattern</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="start" type="xs:double"><xs:annotation><xs:documentation>The start of the dash measured from the start of the repeating interval,along the x-axis of the line CRS (units in mm)</xs:documentation></xs:annotation></xs:element>
			<xs:element name="length" type="xs:double"><xs:annotation><xs:documentation>The length of the dash along the x-axis of the line CRS (units in mm)</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Class LineSymbol -->
	<xs:complexType name="LineSymbol">
		<xs:annotation><xs:documentation>A symbol placed along a line in a repeating pattern</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="position" type="xs:double"><xs:annotation><xs:documentation>The position of the symbol measured from the start of the repeating interval,along the x-axis of the line CRS (units in mm)</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="reference" type="IdString" use="required"><xs:annotation><xs:documentation>A reference to an external definition of the symbol
			graphic. This refers to an identifier of a Catalogue item</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="rotation" type="xs:double" default="0.0"><xs:annotation><xs:documentation>The rotation angle of the symbol. The default value is 0</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="scaleFactor" type="xs:double" default="1.0"><xs:annotation><xs:documentation>The scale factor of the symbol. The default is 1.0</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="crsType" type="CRSType" default="LocalCRS"><xs:annotation><xs:documentation>The type of the CRS where the symbol has to be transformed to. Possible values are localCRS and lineCRS</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
	<!-- An abstract base class for linestyle -->
	<!-- To be used as anchor element of an substitution group -->
	<xs:complexType name="LineStyleBase" abstract="true"/>
	<!-- Class LineStyle -->
	<xs:complexType name="LineStyle">
		<xs:annotation><xs:documentation>A style for line geometry either solid or dashed</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="LineStyleBase">
				<xs:sequence>
					<xs:element name="intervalLength" type="xs:double" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>The length of a repeating interval of the line style
						along the x-axis of the line CRS (units in mm). If not defined the line style describes a solid line</xs:documentation></xs:annotation></xs:element>
					<xs:element name="pen" type="Pen"><xs:annotation><xs:documentation>The pen used for drawing the line</xs:documentation></xs:annotation></xs:element>
					<xs:element name="dash" type="Dash" minOccurs="0" maxOccurs="unbounded"><xs:annotation><xs:documentation>The dashes of a dashed line style</xs:documentation></xs:annotation></xs:element>
					<xs:element name="symbol" type="LineSymbol" minOccurs="0" maxOccurs="unbounded"><xs:annotation><xs:documentation>Symbols placed along the line</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
				<xs:attribute name="capStyle" type="CapStyle" default="Butt"><xs:annotation><xs:documentation>The decoration that is applied where a line
					segment ends</xs:documentation></xs:annotation></xs:attribute>
				<xs:attribute name="joinStyle" type="JoinStyle" default="Miter"><xs:annotation><xs:documentation>The decoration that is applied where two line
					segments meet</xs:documentation></xs:annotation></xs:attribute>
				<xs:attribute name="offset" type="xs:double" default="0.0"><xs:annotation><xs:documentation>An offset perpendicular to the direction of the line.
					The value refers to the y-axis of the line CRS (positive to the left, mm)</xs:documentation></xs:annotation></xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class LineStyleReference -->
	<xs:complexType name="LineStyleReference">
		<xs:annotation><xs:documentation>A line style defined in an external file</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="LineStyleBase">
				<xs:attribute name="reference" type="IdString" use="required"><xs:annotation><xs:documentation>The reference to the external definition of the line
					style. This is an unique identifier in the line style section of the Portrayal Catalogue</xs:documentation></xs:annotation></xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class CompositeLineStyle -->
	<xs:complexType name="CompositeLineStyle">
		<xs:annotation><xs:documentation>A line style made with an aggregation of other line styles</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="LineStyleBase">
				<xs:sequence>
					<xs:group ref="LineStyleGroup" minOccurs="1" maxOccurs="unbounded"><xs:annotation><xs:documentation>The components of the composite line style</xs:documentation></xs:annotation></xs:group>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Group LineStyle -->
	<xs:group name="LineStyleGroup">
		<xs:annotation><xs:documentation>The line style used for the depiction</xs:documentation></xs:annotation>
		<xs:choice>
			<xs:element name="lineStyle" type="LineStyle"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="lineStyleReference" type="LineStyleReference"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="compositeLineStyle" type="CompositeLineStyle"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
		</xs:choice>
	</xs:group>
	<!-- THE AREA FILLS PACKAGE -->
	<!-- Enumeration AreaCRSType -->
	<xs:simpleType name="AreaCRSType">
		<xs:annotation><xs:documentation>Describes how a fill patter is referenced</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Global"><xs:annotation><xs:documentation>Anchor point is consistent with a location on the drawing device for, example starting
				with the corner of the screen. As screen pans the pattern will appear to shift/move through the object on screen</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="LocalGeometry"><xs:annotation><xs:documentation>Anchor point is consistent with the local geometry of the object being depicted, for
				example the upper left corner of the object. Patterns of adjacent objects may not match</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="GlobalGeometry"><xs:annotation><xs:documentation>The anchor point of the fill pattern is defined at a common location such that patterns
				remain consistent relative to all area objects</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- An abstract base class for linestyle -->
	<!-- To be used as anchor element of an substitution group -->
	<xs:complexType name="AreaFillBase" abstract="true"/>
	<!-- Class ColorFill -->
	<xs:complexType name="ColorFill">
		<xs:annotation><xs:documentation>Class defining a solid colour fill for an area</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="AreaFillBase">
				<xs:sequence>
					<xs:element name="color" type="Color"><xs:annotation><xs:documentation>References the colour and transparency for the colour fill</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class AreaFillReference -->
	<xs:complexType name="AreaFillReference">
		<xs:annotation><xs:documentation>An area fill defined in an external file</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="AreaFillBase">
				<xs:attribute name="reference" type="IdString" use="required"><xs:annotation><xs:documentation>The reference to the external definition. This is an unique identifier in the area fill section of the Portrayal Catalogue</xs:documentation></xs:annotation></xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class PatternFill -->
	<xs:complexType name="PatternFill" abstract="true">
		<xs:annotation><xs:documentation>Abstract base class for pattern area fills</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="AreaFillBase">
				<xs:sequence>
					<xs:element name="areaCRS" type="AreaCRSType"><xs:annotation><xs:documentation>Coordinate reference system which defines the origin of the pattern</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class PixmapFill -->
	<xs:complexType name="PixmapFill">
		<xs:annotation><xs:documentation>Pattern fill where the pattern is defined by a pixmap</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="PatternFill">
				<xs:sequence>
					<xs:element name="pixmap" type="Pixmap"><xs:annotation><xs:documentation>The pixmap defining the pattern</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class SymbolFill -->
	<xs:complexType name="SymbolFill">
		<xs:annotation><xs:documentation>Pattern fill where the pattern is defined by repeated symbols</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="PatternFill">
				<xs:sequence>
					<xs:element name="symbol" type="Symbol"><xs:annotation><xs:documentation>The symbol used for the pattern</xs:documentation></xs:annotation></xs:element>
					<xs:element name="v1" type="Vector"><xs:annotation><xs:documentation>Defines the offset of the next symbol in the first dimension of the pattern according to the local CRS</xs:documentation></xs:annotation></xs:element>
					<xs:element name="v2" type="Vector"><xs:annotation><xs:documentation>Defines the offset of the next symbol in the second dimension of the pattern according to the local CRS</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
				<xs:attribute name="clipSymbols" type="xs:boolean" default="true"><xs:annotation><xs:documentation>Indicates whether the symbols in the pattern are to be clipped by the area (when they are part in/out of the area) or whether the symbol is not drawn at all unless it is completely contained in the area</xs:documentation></xs:annotation></xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class Hatch -->
	<xs:complexType name="Hatch">
		<xs:annotation><xs:documentation>A set of parallel lines used for an area fill pattern</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:group ref="LineStyleGroup"><xs:annotation><xs:documentation>The line style used for each hatch line</xs:documentation></xs:annotation></xs:group>
			<xs:element name="direction" type="Vector"><xs:annotation><xs:documentation>The vector defining the direction of the set of lines</xs:documentation></xs:annotation></xs:element>
			<xs:element name="distance" type="xs:double"><xs:annotation><xs:documentation>The distance between the lines measured perpendicular to the direction</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Class HatchFill -->
	<xs:complexType name="HatchFill">
		<xs:annotation><xs:documentation>Defining a pattern made of one or two sets of parallel lines</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="PatternFill">
				<xs:sequence>
					<xs:element name="hatch" type="Hatch" minOccurs="1" maxOccurs="2"><xs:annotation><xs:documentation>A set of parallel lines</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Group AreaFill -->
	<xs:group name="AreaFillGroup">
		<xs:choice>
			<xs:element name="colorFill" type="ColorFill"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="areaFillReference" type="AreaFillReference"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="pixmapFill" type="PixmapFill"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="symbolFill" type="SymbolFill"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="hatchFill" type="HatchFill"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
		</xs:choice>
	</xs:group>
	<!-- THE TEXT PACKAGE -->
	<!-- Enumeration FontProportion -->
	<xs:simpleType name="FontProportion">
		<xs:annotation><xs:documentation>The values describe how the width of the typefaces in a font is defined</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="MonoSpaced"><xs:annotation><xs:documentation>All typefaces in a font have the same width, also known as âtypewriterâ fonts</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Proportional"><xs:annotation><xs:documentation>Any typeface in the font as its individual width</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration FontSlant -->
	<xs:simpleType name="FontSlant">
		<xs:annotation><xs:documentation>The slant used within a font</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Upright"><xs:annotation><xs:documentation>Typefaces are upright</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Italics"><xs:annotation><xs:documentation>Typefaces are cursive</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration FontWeight -->
	<xs:simpleType name="FontWeight">
		<xs:annotation><xs:documentation>The thickness used for the typefaces in a font</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Light"><xs:annotation><xs:documentation>Typefaces are depicted as thin (standard)</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Medium"><xs:annotation><xs:documentation>Typefaces are depicted thicker as âLightâ but not as thin as âBoldâ</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Bold"><xs:annotation><xs:documentation>Typefaces are depicted more prominent (Bold)</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration TextFlag -->
	<xs:simpleType name="TextFlag">
		<xs:annotation><xs:documentation>The values describe some effects used when the text will be depicted. The values can
			be combined</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="UnderLine"><xs:annotation><xs:documentation>Text is depicted with a line under the text</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="StrikeThrough"><xs:annotation><xs:documentation>Text is depicted struck through, a line goes through the text</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="UpperLine"><xs:annotation><xs:documentation>Text is depicted with a line above the text</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration HorizontalAlignment -->
	<xs:simpleType name="HorizontalAlignment">
		<xs:annotation><xs:documentation>Describes the text placement relative to the anchor point in horizontal direction</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Start"><xs:annotation><xs:documentation>The anchor point is at the start of the text</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="End"><xs:annotation><xs:documentation>The anchor point is at the end of the text</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Center"><xs:annotation><xs:documentation>The anchor point is at the (horizontal) centre of the text</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Enumeration VerticalAlignment -->
	<xs:simpleType name="VerticalAlignment">
		<xs:annotation><xs:documentation>Describes the text placement relative to the anchor point in vertical direction</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Top"><xs:annotation><xs:documentation>The anchor point is at the top of the text</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Bottom"><xs:annotation><xs:documentation>The anchor point is at the bottom of the text</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Center"><xs:annotation><xs:documentation>The anchor point is at the (vertical) centre of the text</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Class Font -->
	<xs:complexType name="Font" abstract="true"><xs:annotation><xs:documentation>Abstract base class for fonts</xs:documentation></xs:annotation></xs:complexType>
	<!-- Class FontCharaceristics -->
	<xs:complexType name="FontCharacteristics">
		<xs:annotation><xs:documentation>Class describing the main characteristics of a font</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="Font">
				<xs:sequence>
					<xs:element name="serifs" type="xs:boolean"><xs:annotation><xs:documentation>Describes whether the typefaces contain serifs or not</xs:documentation></xs:annotation></xs:element>
					<xs:element name="proportion" type="FontProportion"><xs:annotation><xs:documentation>Describes whether all typefaces in the font have an individual width or a fixed width</xs:documentation></xs:annotation></xs:element>
					<xs:element name="weight" type="FontWeight"><xs:annotation><xs:documentation>Describes the thickness of the typefaces</xs:documentation></xs:annotation></xs:element>
					<xs:element name="slant" type="FontSlant"><xs:annotation><xs:documentation>Describes the slant of the typefaces</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class FontReference -->
	<xs:complexType name="FontReference">
		<xs:annotation><xs:documentation>Class referencing a font from an external source</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="Font">
				<xs:attribute name="reference" type="IdString" use="required"><xs:annotation><xs:documentation>The identifier for the external file within the Portrayal Catalogue</xs:documentation></xs:annotation></xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Group Font -->
	<xs:group name="Font">
		<xs:choice>
			<xs:element name="fontCharacteristics" type="FontCharacteristics"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="fontReference" type="FontReference"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
		</xs:choice>
	</xs:group>
	<!-- Class TextFlags -->
	<xs:complexType name="TextFlags">
		<xs:annotation><xs:documentation>A container for text flags</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="flag" type="TextFlag" minOccurs="1" maxOccurs="unbounded"><xs:annotation><xs:documentation>A text flag</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>
	<!-- Class TextElement -->
	<xs:complexType name="TextElement">
		<xs:annotation><xs:documentation>A sub element of a graphic text</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="text" type="xs:string"><xs:annotation><xs:documentation>The text to be depicted</xs:documentation></xs:annotation></xs:element>
			<xs:element name="bodySize" type="xs:double"><xs:annotation><xs:documentation>This property describes the size with which the text
				will be depicted</xs:documentation></xs:annotation></xs:element>
			<xs:element name="flags" type="TextFlags" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Flags describe special properties of the text
				element like underline etc.</xs:documentation></xs:annotation></xs:element>
			<xs:element name="foreground" type="Color"><xs:annotation><xs:documentation>The colour used to depict the glyphs</xs:documentation></xs:annotation></xs:element>
			<xs:element name="background" type="Color" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>The colour to fill the rectangle surrounding the text
				element before the text is depicted. If not given there is no fill (transparent)</xs:documentation></xs:annotation></xs:element>
			<xs:group ref="Font"><xs:annotation><xs:documentation>The font used for the depiction of the text element.</xs:documentation></xs:annotation></xs:group>
		</xs:sequence>
		<xs:attribute name="verticalOffset" type="xs:double" default="0.0"><xs:annotation><xs:documentation>The vertical offset in mm between the base line of
			the text element and the base line of the text. This
			can be used to generate sub- or superscripts.
			Default = 0</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
	<!-- Class Text -->
	<xs:complexType name="Text" abstract="true">
		<xs:annotation><xs:documentation>The abstract base class of graphic elements for depicting text. The text is composed of elements</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="element" type="TextElement" minOccurs="1" maxOccurs="unbounded"><xs:annotation><xs:documentation>The ordered list of text elements</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="horizontalAlignment" type="HorizontalAlignment" default="Start"><xs:annotation><xs:documentation>Specifies how the text is horizontally aligned
			relative to the anchor point. Default = start</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="verticalAlignment" type="VerticalAlignment" default="Bottom"><xs:annotation><xs:documentation>Specifies how the text is vertically aligned relative
			to the anchor point. Default = bottom</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
	<!-- Class TextPoint -->
	<xs:complexType name="TextPoint">
		<xs:annotation><xs:documentation>A graphic element for depicting text relative to a point</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="Text">
				<xs:sequence>
					<xs:element name="offset" type="Vector" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Specifies the offset from the anchor point with
						respect to the portrayal CRS</xs:documentation></xs:annotation></xs:element>
					<!-- S-100WG5-4.10 / TSM7-5.3g -->
					<xs:element name="linePlacement" type="LineSymbolPlacement" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Describes the placement of the text when the
						geometry is a curve</xs:documentation></xs:annotation></xs:element>
					<xs:element name="areaPlacement" type="AreaSymbolPlacement" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Describes the placement of the text when the
						geometry is a surface</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
				<xs:attribute name="rotation" type="xs:double" default="0.0"><xs:annotation><xs:documentation>Specifies the rotation angle relative to the
					portrayal CRS. Default = 0</xs:documentation></xs:annotation></xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Class TextLine -->
	<xs:complexType name="TextLine">
		<xs:annotation><xs:documentation>A graphic element for depicting text along linear geometry</xs:documentation></xs:annotation>
		<xs:complexContent>
			<xs:extension base="Text">
				<xs:sequence>
					<xs:element name="startOffset" type="xs:double"><xs:annotation><xs:documentation>This offset specifies the anchor point on the line</xs:documentation></xs:annotation></xs:element>
					<xs:element name="endOffset" type="xs:double" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>This offset specifies the stop point of the text at the line. If present the startOffset does not specifies an anchor point but the start point of the text. The text will evenly be spaced between the two positions. Horizontal alignment has no effect in this case</xs:documentation></xs:annotation></xs:element>
					<xs:element name="placementMode" type="LinePlacementMode"><xs:annotation><xs:documentation>Specifies how the offsets have to be interpreted</xs:documentation></xs:annotation></xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- Group Text -->
	<xs:group name="Text">
		<xs:choice>
			<xs:element name="textPoint" type="TextPoint"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
			<xs:element name="textLine" type="TextLine"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>
		</xs:choice>
	</xs:group>
	<!-- Enumeration ChampionChoice -->
	<xs:simpleType name="ChampionChoice">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Smallest"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="Largest"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<!-- Class CoverageColor -->
	<xs:complexType name="CoverageColor">
		<xs:annotation><xs:documentation>A class to fill a Coverage with colour</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="startColor" type="Color" ><xs:annotation><xs:documentation>The colour to assign to the matching range or to use as the start point in a colour ramp when âendColorâ is defined</xs:documentation></xs:annotation></xs:element>
			<xs:element name="endColor" type="Color" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>The colour to use as stop point in a colour ramp. The range of values is spread linearly across the range of colours from âstartColorâ to âendColorâ to produce a gradient effect</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="penWidth" type="xs:double" ><xs:annotation><xs:documentation>Optional pen width to apply for dot colour used for discrete points</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
		<!-- Class NumericAnnotation -->
	<xs:complexType name="NumericAnnotation">
		<xs:annotation><xs:documentation>A class for numeric textual annotations of values in a Coverage</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:group ref="Font"><xs:annotation><xs:documentation>Font information to use for display of numeric values across a coverage. Text::Font is a choice of either FontCharacteristics or FontReference</xs:documentation></xs:annotation></xs:group>
			<xs:element name="color" type="Color" ><xs:annotation><xs:documentation>Colour to draw the numeric annotation</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="decimals" type="xs:int" default="1"><xs:annotation><xs:documentation>Number of decimal digits to show in subscript</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="bodySize" type="xs:double" use="required"><xs:annotation><xs:documentation>This property describes the size with which the text will be depicted</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="buffer" type="xs:double" default="0"><xs:annotation><xs:documentation>Buffer to apply for collision detection in presentation units. Default=0</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="champion" type="ChampionChoice" default="Smallest"><xs:annotation><xs:documentation>Enumeration to indicate which value to display in the event of a collision</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
		<!-- Class SymbolAnnotation -->
	<xs:complexType name="SymbolAnnotation">
		<xs:annotation><xs:documentation>A class for symbol annotations of values in a coverage.</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="rotationAttribute" type="xs:string" minOccurs="0" maxOccurs="1" ><xs:annotation><xs:documentation>The attribute code of the Coverage Attribute to use for the symbol rotation value.</xs:documentation></xs:annotation></xs:element>
			<xs:element name="rotationFactor" type="xs:double" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Used to adjust the ârotationAttributeâ value by multiplication before applying. Default 1.0</xs:documentation></xs:annotation></xs:element>
			<xs:element name="scaleAttribute" type="xs:string" minOccurs="0" maxOccurs="1" ><xs:annotation><xs:documentation>The attribute code of the Coverage attribute to use for scaling the symbol size.</xs:documentation></xs:annotation></xs:element>
			<xs:element name="scaleFactor" type="xs:double" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Used to adjust the â scaleAttributeâ value by multiplication before applying. Default 1.0</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
		<xs:attribute name="reference" type="IdString" use="required"><xs:annotation><xs:documentation>Reference to the symbol to apply. Catalogue id.</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="defaultRotation" type="xs:double" default="0.0"><xs:annotation><xs:documentation>A default symbol rotation. Applies when rotation attribute not defined. Default=0</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="rotationCRS" type="CRSType" default="PortrayalCRS"><xs:annotation><xs:documentation>Specifies the coordinate reference system for the rotation. Default=PortrayalCRS</xs:documentation></xs:annotation></xs:attribute>
		<xs:attribute name="defaultScaleFactor" type="xs:double" default="1.0"><xs:annotation><xs:documentation>A default symbol scale factor. Applies when scale attribute not defined. Default=1</xs:documentation></xs:annotation></xs:attribute>
	</xs:complexType>
		<!-- Class LookupEntry -->
	<xs:complexType name="LookupEntry">
		<xs:annotation><xs:documentation>An entry in a lookup table used to assign portrayal to coverage elements.</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="label" type="xs:string"><xs:annotation><xs:documentation>String used as a display label or legend field.</xs:documentation></xs:annotation></xs:element>
			<xs:element name="range" type="s100CSL:S100_NumericRange" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Value range definition. Can be a single value, open or closed range etc. See S-100 Part 1 Conceptual Schema Language for details.</xs:documentation></xs:annotation></xs:element>
			<xs:element name="color" type="CoverageColor" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>The colour to assign to the matching range. Can be a single colour or a colour ramp.</xs:documentation></xs:annotation></xs:element>
			<xs:element name="digits" type="NumericAnnotation" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Display the value as numeric digits.</xs:documentation></xs:annotation></xs:element>
			<xs:element name="symbol" type="SymbolAnnotation" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Display a symbol.</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>

	<!-- Coverage placement -->
	<xs:simpleType name="CoveragePlacement">
		<xs:annotation><xs:documentation>Defines the type of placement of a symbol or text annotations for a coverage</xs:documentation></xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="centre"><xs:annotation><xs:documentation>The anchor point for annotations is the centre of the cell</xs:documentation></xs:annotation></xs:enumeration>
			<xs:enumeration value="directPosition"><xs:annotation><xs:documentation>The anchor point for annotations is the direct position associated with each value of the attribute designated by the attributeCode parameter of the CoverageFill in which the placement is encoded</xs:documentation></xs:annotation></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

		<!-- Class CoverageFill -->
	<xs:complexType name="CoverageFill">
		<xs:annotation><xs:documentation>A class to fill a Coverage with using a lookup table to match a value or range of values and assign colour, numeric or symbol annotations</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="attributeCode" type="xs:string"><xs:annotation><xs:documentation>Code of coverage attribute value to match</xs:documentation></xs:annotation></xs:element>
			<xs:element name="uom" type="s100CSL:S100_UnitOfMeasure" minOccurs="0" maxOccurs="1"><xs:annotation><xs:documentation>Unit of measure. If not given the values in the
				range are assumed to be same units as the coverage attribute values</xs:documentation></xs:annotation></xs:element>
			<xs:element name="placement" type="CoveragePlacement" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Designation of anchor point for placement of text or symbol annotation. Mandatory if and only if portrayal requires text or symbol annotation; otherwise omitted. This attribute is valid only for continuous coverages (for discrete coverages, the anchor point is the direct position).</xs:documentation>
					</xs:annotation>
			</xs:element>
			<xs:element name="lookup" type="LookupEntry" minOccurs="1" maxOccurs="unbounded"><xs:annotation><xs:documentation>Lookup table. The entries are ordered and processed on a first match basis</xs:documentation></xs:annotation></xs:element>
		</xs:sequence>
	</xs:complexType>

</xs:schema>
